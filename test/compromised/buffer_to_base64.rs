use std::str;

fn main() {

    let buf = [
        0x4du8, 0x48u8, 0x68u8, 0x6au8, 0x4eu8, 0x6au8, 0x63u8, 0x34u8, 0x5au8, 0x57u8, 0x59u8, 0x78u8, 0x59u8, 
        0x57u8, 0x45u8, 0x30u8, 0x4eu8, 0x54u8, 0x5au8, 0x6bu8, 0x59u8, 0x54u8, 0x59u8, 0x31u8, 0x59u8, 0x7au8, 
        0x5au8, 0x6du8, 0x59u8, 0x7au8, 0x55u8, 0x34u8, 0x4eu8, 0x6au8, 0x46u8, 0x6bu8, 0x4eu8, 0x44u8, 0x51u8, 
        0x34u8, 0x4fu8, 0x54u8, 0x4au8, 0x6au8, 0x5au8, 0x47u8, 0x5au8, 0x68u8, 0x59u8, 0x7au8, 0x42u8, 0x6au8, 
        0x4eu8, 0x6du8, 0x4du8, 0x34u8, 0x59u8, 0x7au8, 0x49u8, 0x31u8, 0x4eu8, 0x6au8, 0x42u8, 0x69u8, 0x5au8, 
        0x6au8, 0x42u8, 0x6au8, 0x4fu8, 0x57u8, 0x5au8, 0x69u8, 0x59u8, 0x32u8, 0x52u8, 0x68u8, 0x5au8, 0x54u8, 
        0x4au8, 0x6du8, 0x4eu8, 0x44u8, 0x63u8, 0x7au8, 0x4eu8, 0x57u8, 0x45u8, 0x35u8, 0x4du8, 0x48u8, 0x67u8, 
        0x79u8, 0x4du8, 0x44u8, 0x67u8, 0x79u8, 0x4eu8, 0x44u8, 0x4au8, 0x6au8, 0x4eu8, 0x44u8, 0x42u8, 0x68u8, 
        0x59u8, 0x32u8, 0x52u8, 0x6du8, 0x59u8, 0x54u8, 0x6cu8, 0x6cu8, 0x5au8, 0x44u8, 0x67u8, 0x34u8, 0x4fu8, 
        0x57u8, 0x55u8, 0x32u8, 0x4fu8, 0x44u8, 0x56u8, 0x6au8, 0x4du8, 0x6au8, 0x4du8, 0x31u8, 0x4eu8, 0x44u8, 
        0x64u8, 0x68u8, 0x59u8, 0x32u8, 0x4au8, 0x6cu8, 0x5au8, 0x44u8, 0x6cu8, 0x69u8, 0x5au8, 0x57u8, 0x5au8, 
        0x6au8, 0x4eu8, 0x6au8, 0x41u8, 0x7au8, 0x4eu8, 0x7au8, 0x46u8, 0x6cu8, 0x4fu8, 0x54u8, 0x67u8, 0x33u8, 
        0x4eu8, 0x57u8, 0x5au8, 0x69u8, 0x59u8, 0x32u8, 0x51u8, 0x33u8, 0x4du8, 0x7au8, 0x59u8, 0x7au8, 0x4eu8, 
        0x44u8, 0x42u8, 0x69u8, 0x59u8, 0x6au8, 0x51u8, 0x34u8
    ];

    let res = str::from_utf8(&buf).unwrap();

    println!("result {}", res); // res will be base64 encoded data
}